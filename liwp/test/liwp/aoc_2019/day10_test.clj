(ns liwp.aoc-2019.day10-test
  (:require [liwp.aoc-2019.day10 :as sut]
            [clojure.test :as t]))

(t/deftest test-parse-map
  (t/is (= {0 #{1 4}
            2 #{0 1 2 3 4}
            3 #{4}
            4 #{3 4}} (sut/parse-map ".#..#\n.....\n#####\n....#\n...##"))))

(t/deftest test-demo-1
  (let [demo (sut/parse-map ".#..#\n.....\n#####\n....#\n...##")]
    (t/is (= [[3 4] 8] (sut/run-on-map demo)))))

(t/deftest test-demo-2
  (let [demo (sut/parse-map "......#.#.\n#..#.#....\n..#######.\n.#.#.###..\n.#..#.....\n..#....#.#\n#..#....#.\n.##.#..###\n##...#..#.\n.#....####")]
    (t/is (= [[5 8] 33] (sut/run-on-map demo)))))

(t/deftest test-demo-3
  (let [demo (sut/parse-map "#.#...#.#.\n.###....#.\n.#....#...\n##.#.#.#.#\n....#.#.#.\n.##..###.#\n..#...##..\n..##....##\n......#...\n.####.###.")]
    (t/is (= [[1 2] 35] (sut/run-on-map demo)))))

(t/deftest test-demo-4
  (let [demo (sut/parse-map ".#..#..###\n####.###.#\n....###.#.\n..###.##.#\n##.##.#.#.\n....###..#\n..#.#..#.#\n#..#.#.###\n.##...##.#\n.....#.#..")]
    (t/is (= [[6 3] 41] (sut/run-on-map demo)))))

(t/deftest test-demo-5
  (let [demo (sut/parse-map ".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##")]
    (t/is (= [[11 13] 210] (sut/run-on-map demo)))))

(t/deftest test-part-1)

(t/deftest test-part-2)
